<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_9" version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
 xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

    <display-name>Archetype Created Web Application</display-name>
    <filter>  
        <filter-name>Set Character Encoding</filter-name>  
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  
        <init-param>  
       <!--        字符集，即将过滤到的request的字符集设置为encoding指定的值，如UTF-8等，相当于：
				request.setCharacterEncoding   -->
            <param-name>encoding</param-name>  
            <param-value>UTF-8</param-value>  
        </init-param>  
        <init-param>  
<!--         指定response的字符集是否也设置成encoding所指定的字符集，所以你可以选择设置为true或false，当值为true时，相当于request.setCharacterEncoding(“”);  
response.setCharacterEncoding(“”);    当值为false时，相当于：request.setCharacterEncoding(“”);   -->
            <param-name>forceEncoding</param-name>  
            <param-value>true</param-value><!-- 强制进行转码 -->  
        </init-param> 
<!--                以上代码放置在web.xml中，相当于servlet中的：request.setCharacterEncoding("UTF-8");  
response.setCharacterEncoding("UTF-8");    -->
    </filter>  
  
    <filter-mapping>  
        <filter-name>Set Character Encoding</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>
    
    <servlet>
         <servlet-name>charitabler</servlet-name>
         <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
         <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
		<servlet-name>charitabler</servlet-name>
		<!-- 拦截了所有请求会导致静态资源无法访问，所以要在charitabler-servlet.xml中配置mvc:resources -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
	<servlet-name>default</servlet-name>
	<url-pattern>*.html</url-pattern>
	</servlet-mapping>
	
<!-- 	<servlet-mapping>
	<servlet-name>default</servlet-name>
	<url-pattern>*.css</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
	<servlet-name>default</servlet-name>
	<url-pattern>*.js</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
	<servlet-name>default</servlet-name>
	<url-pattern>*.png</url-pattern>
	</servlet-mapping>-->
	
	<servlet-mapping>
	<servlet-name>default</servlet-name>
	<url-pattern>*.jpg</url-pattern>
	</servlet-mapping> 
	<servlet-mapping>
	<servlet-name>default</servlet-name>
	<url-pattern>*.ico</url-pattern>
	</servlet-mapping> 
     
    <listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- 加载其它的配置文件 -->
	<context-param>
  		<param-name>contextConfigLocation</param-name>
  		<param-value>
  			/WEB-INF/applicationContext.xml,
  		</param-value>
 	</context-param>
 	

    <welcome-file-list>
         <welcome-file>index.html</welcome-file>
         <welcome-file>index.htm</welcome-file>
         <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
</web-app>
